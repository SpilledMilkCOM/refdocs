SET NOCOUNT ON

DECLARE @execStatement	AS VARCHAR(1024)

DECLARE	@tableName		AS VARCHAR(32)
SET		@tableName		= 'wrk70t_rbcnv_intmast'
--SET		@tableName		= 'wrk70t_rbcnv_client'

DECLARE	@fileBaseName	AS VARCHAR(32)
SET		@fileBaseName	= 'intmast'
--SET		@fileBaseName	= 'client'

DECLARE @newLine		AS CHAR(1)
SET		@newLine		= '
'

DECLARE @tab		AS CHAR(1)
SET		@tab		= '	'

PRINT '-------------------------------------------------------------------------------------------------------------'
PRINT '-- Author       : Parker Smart'
PRINT '-- Generated By : ' + user
PRINT '-- Date         : ' + CONVERT(VARCHAR(32), getdate())
PRINT '-- Table        : ' + @tableName
PRINT '-- Description  : This SQL script displays the the NULL counts in each column.'
PRINT '-------------------------------------------------------------------------------------------------------------'
PRINT ''
PRINT 'DECLARE @count		AS INT'
PRINT ''

DECLARE theCursor CURSOR FOR
SELECT
		'SET @count = (SELECT COUNT(*) FROM (SELECT line_nbr FROM ' + @tableName + ' WHERE ' + CONVERT(VARCHAR(40), sc.name) + ' IS NULL) c)' + @newLine
		+ 'IF (@count > 0)' + @newLine
		+ @tab + 'SELECT COUNT(*) AS ''NULL COUNT of ' + @tableName + '.' + CONVERT(VARCHAR(40), sc.name) + ' / ' +  FIL15.srce_name + '''' + @newLine
		+ @tab + 'FROM (SELECT line_nbr' + @newLine
		+ @tab + @tab + 'FROM ' + @tab + @tableName + @newLine
		+ @tab + @tab + 'WHERE' 		+ @tab + CONVERT(VARCHAR(40), sc.name) + ' IS NULL) t' + @newLine + @newLine
FROM 		sysobjects so
INNER JOIN 	syscolumns sc
			ON 	sc.id = so.id
INNER JOIN 	systypes st
			ON	st.xtype = sc.xtype
INNER JOIN	fil15t_recdinfo				FIL15
			ON FIL15.[col_name] 		= sc.name
INNER JOIN	fil16t_filetbleassocn		FIL16
			ON FIL16.recd_type_id		= FIL15.recd_type_id
INNER JOIN	fil12t_tblebase				FIL12
			ON 	FIL12.tble_base_id		= FIL16.tble_base_id
			AND FIL12.tble_base_name	= @tableName
INNER JOIN	fil11t_filebase				FIL11
			ON 	FIL11.file_base_id		= FIL16.file_base_id
			AND FIL11.file_base_name 	= @fileBaseName

WHERE	
		so.xtype in ('U', 'V')
and		so.name = @tableName
and		sc.name NOT IN (
						  'lst_updt_tmestmp'
						, 'lst_updt_userid'
						)

ORDER BY so.name, sc.colorder, sc.name --, sc.name


OPEN theCursor

FETCH NEXT FROM theCursor INTO @execStatement

WHILE (@@FETCH_STATUS = 0)
BEGIN
	PRINT @execStatement
--	EXEC ('SELECT * FROM ' + @tableName + ' WHERE lst_updt_userid = ''NLCNV2''')
	
	FETCH NEXT FROM theCursor INTO @execStatement
END

CLOSE theCursor
DEALLOCATE theCursor